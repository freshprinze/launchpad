http:
  routers:
    ## dashy
    # dashy:
    #   entryPoints:
    #     - websecure
    #   rule: "Host(`home.local.theinquisitive.me`)"
    #   middlewares:
    #     - default-headers
    #   tls: {}
    #   service: dashy

    pfsense:
      entryPoints:
        - websecure
      rule: "Host(`pfsense.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: pfsense

    ## CRS
    mahsen:
      entryPoints:
        - websecure
      rule: "Host(`mahasen.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: mahasen

    ## POE Sw in Office Room
    gajaba:
      entryPoints:
        - websecure
      rule: "Host(`gajaba.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: gajaba

    omada:
      entryPoints:
        - websecure
      rule: "Host(`omada.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: omada

    ## pihole
    pathos:
      entryPoints:
        - websecure
      rule: "Host(`pathos.local.theinquisitive.me`)"
      middlewares:
        - default-headers
        - pihole-redirectregex
        - pihole-addprefix
      tls: {}
      service: pathos

    ## proxmox
    capella:
      entryPoints:
        - websecure
      rule: "Host(`capella.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: capella

    ## synology
    synology:
      entryPoints:
        - websecure
      rule: "Host(`synology.local.theinquisitive.me`)"
      middlewares:
        - default-headers
      tls: {}
      service: synology

  services:
    # dashy:
    #   loadBalancer:
    #     serversTransport: insecureTransport
    #     servers:
    #       - url: "http://172.16.20.40:4000"
    #     passHostHeader: true

    pfsense:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: "https://192.168.1.1:10443"
        passHostHeader: true

    mahasen:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: "http://10.99.99.2"
        passHostHeader: true

    gajaba:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: "https://10.99.99.4"
        passHostHeader: true

    omada:
      loadBalancer:
        serversTransport: insecureTransport
        servers:
          - url: "https://10.99.99.5"
        passHostHeader: true

    pathos:
      loadBalancer:
        servers:
          - url: "http://172.16.20.6"
        passHostHeader: true

    capella:
      loadBalancer:
        servers:
          - url: "https://172.16.20.5:8006"
        passHostHeader: true

    synology:
      loadBalancer:
        servers:
          - url: "http://192.168.0.11:5000"
        passHostHeader: true

  # allow self-signed certificates for proxied web services
  serversTransports:
    insecureTransport:
      insecureSkipVerify: true

  middlewares:
    # pihole-redirect:
    #   redirectRegex:
    #     regex: "^https?://pihole.local.example.com/$"
    #     replacement: "https://pihole.local.example.com/admin/"

    pihole-addprefix:
      addPrefix:
        prefix: /admin

    pihole-redirectregex:
      redirectRegex:
        regex: /admin/$
        replacement: /

    https-redirect:
      redirectScheme:
        scheme: https

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true

    default-whitelist:
      ipWhiteList:
        sourceRange:
          - "10.0.0.0/24"
          - "192.168.0.0/16"
          - "172.0.0.0/8"

    secured:
      chain:
        middlewares:
          - default-whitelist
          - default-headers
